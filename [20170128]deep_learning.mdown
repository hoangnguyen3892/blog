Title: Deep learning 
Date: 2017-01-04 14:56 
Modified: 2017-01-28 22:10
Category: Machine Learning
Tags: machine learning, deep learning
Slug: my-super-post
Authors: Hoang Nguyen
Summary: Deep learning for Dummies


# Deep learning for everyone 
---

## Theoretical knowledge
**1.Convolutional network (CNN)**

**2. Recurrent network (RNN)**
- [Understanding LSTM Networks](http://colah.github.io/posts/2015-08-Understanding-LSTMs/)

**3. Generative model**
- [VAE]()
- [GAN](https://hackernoon.com/how-do-gans-intuitively-work-2dda07f247a1#.gmic40fnz)

## Practical code

**1. Set up a machine**
- [AWS deep learning setup](https://www.youtube.com/watch?v=8rjRfW4JM2I&index=2&list=PLfYUBJiXbdtS2UQRzyrxmyVHoGW0gmLSM)
- Set up new environment:
    - conda create -n pydata3 python=3 numpy matplotlib seaborn keras theano scikit-learn
    - conda install -c conda-forge tensorflow
    - pip install -U bcolz

    
**2. Transfer learning**
- [Transfer Learning](http://cs231n.github.io/transfer-learning/)

> ConvNet features are more generic in early layers and more original-dataset-specific in later layers, here are some common rules of thumb for navigating the 4 major scenarios:
1. New dataset is small and similar to original dataset. Since the data is small, it is not a good idea to fine-tune the ConvNet due to overfitting concerns. Since the data is similar to the original data, we expect higher-level features in the ConvNet to be relevant to this dataset as well. Hence, the best idea might be to train a linear classifier on the CNN codes.
2. New dataset is large and similar to the original dataset. Since we have more data, we can have more confidence that we wonâ€™t overfit if we were to try to fine-tune through the full network.
3. New dataset is small but very different from the original dataset. Since the data is small, it is likely best to only train a linear classifier. Since the dataset is very different, it might not be best to train the classifier form the top of the network, which contains more dataset-specific features. Instead, it might work better to train the SVM classifier from activations somewhere earlier in the network.
4. New dataset is large and very different from the original dataset. Since the dataset is very large, we may expect that we can afford to train a ConvNet from scratch. However, in practice it is very often still beneficial to initialize with weights from a pretrained model. In this case, we would have enough data and confidence to fine-tune through the entire network.

- [Classifying images with a pre-trained deep network](http://fastml.com/classifying-images-with-a-pre-trained-deep-network/)

**3. Optimization**



**4. Regularization**
- [Data augmentation]():
- [Dropout](https://classroom.udacity.com/courses/ud730/lessons/6379031992/concepts/63923585860923#):
- 

**5. Dealing with small dataset**
- [Pseudo label](http://deeplearning.net/wp-content/uploads/2013/03/pseudo_label_final.pdf)

## Deep learning library
- [Keras](https://keras.io/): Keras is a high-level neural networks library, written in Python and capable of running on top of either TensorFlow or Theano
- [Pytorch](http://pytorch.org/): PyTorch is a python package that provides two high-level features: Tensor computation (like numpy) with strong GPU acceleration and Deep Neural Networks built on a tape-based autograd system

## Online Courses
- _Beginner_: [Intro to Inferential Statistics](https://classroom.udacity.com/courses/ud201/lessons/1234788951/concepts/12191788780923) provided by **Udacity**
- _Beginner_: [Intro to Descriptive Statistics](https://classroom.udacity.com/courses/ud827/lessons/1293178557/concepts/19610485690923) provided by **Udacity**
- _Intermediate_: [Intro to Machine Learning](https://classroom.udacity.com/courses/ud120/lessons/2410328539/concepts/24185385370923#) provided by **Udacity**
- _Intermediate_: [Machine Learning](https://www.coursera.org/learn/machine-learning) provided by **Coursera**
- _Advance_: [Deep Learning](https://classroom.udacity.com/courses/ud730/lessons/7320377048/concepts/375715a0-343a-4e9e-b312-405dc5ad79b0) provided by **Udacity**
- _Advance_: [fast.ai](http://wiki.fast.ai/index.php/Main_Page)

## Blog
- [Analytics Vidhya](https://www.analyticsvidhya.com/)
- [Machine Learning Mastery](http://machinelearningmastery.com/)

## Youtube Channel
- [sentdex](https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ)
- [Dan Van Boxel](https://www.youtube.com/channel/UC6tnRFKGiq1DlybcqP5rZ7A)
- [Siraj Raval](https://www.youtube.com/channel/UCWN3xxRkmTPmbKwht9FuE5A)
- [CS231n](https://www.youtube.com/channel/UC2__PIf36huAgKFumlOIs6A)
- [Nando de Freitas](https://www.youtube.com/channel/UC0z_jCi0XWqI8awUuQRFnyw)

## Competitions in Kaggle 
- [State Farm Distracted Driver Detection](https://www.kaggle.com/c/state-farm-distracted-driver-detection): Apr 06, 2016 - Aug 02, 2016
- [Dogs vs. Cats Redux: Kernels Edition](https://www.kaggle.com/c/dogs-vs-cats-redux-kernels-edition): Sep 03, 2016 - Mar 03, 2017
- [The Nature Conservancy Fisheries Monitoring](https://www.kaggle.com/c/the-nature-conservancy-fisheries-monitoring): Nov 14, 2016 - Apr 13, 2017